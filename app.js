const express = require('express');
const app = express();
const dfff = require('dialogflow-fulfillment');
const port = 3000;
const mysql = require('mysql');
const {Image} = require('dialogflow-fulfillment');
const {WebhookClient} = require('dialogflow-fulfillment');
const {Card, Suggestion} = require('dialogflow-fulfillment');
const {Payload} = require('dialogflow-fulfillment');
const { DateTime } = require('actions-on-google');
const moment = require('moment');

prodName = '';
form = [];
timedate = new Date();
countProduct = 0;
totalCost = 0;
deliveryType = '';
statusDel = '';
cusName = '';
cusAdd = '';
cusTel = '';
currentDate = '';
tracking = '';
  app.listen(port, () => {
	console.log(`üåè Server is running at http://localhost:${port}`)
})

app.get('/', (req, res)=>{
    res.send("Working")
});

app.post('/', express.json(), (req, res)=>{
    const agent = new dfff.WebhookClient({
        request : req,
        response : res
    });

    function connectToDatabase(){
      const connection = mysql.createConnection({
      host     : '188.166.223.10',
      user     : 'authapol',
      password : '4150Tainner!',
      database : 'ChatBotForSMEsDB'
      });
      return new Promise((resolve,reject) => {
        connection.connect();
        resolve(connection);
     });
    }
    function queryDatabase(connection){
      return new Promise((resolve, reject) => {
        connection.query('SELECT * FROM Product' , (error, results, fields) => {
          resolve(results);
        });
      });
    }

    function insertIntoDatabase(connection, data){
      return new Promise((resolve, reject) => {
        connection.query('INSERT INTO ChatBotForSMEsDB.Order SET ?',  data, (error, results, fields) => {
          resolve(results);
        });
      });
    }
    
    async function product(agent){
      const user_email = agent.parameters.Product;
    return connectToDatabase()
    .then(connection => {
      return queryDatabase(connection)
      .then(result => {
        //console.log(result);
        result.map(user => {
          if(user_email === user.Product){
            const card = new Card(`${user.Product_Name} ‡∏£‡∏≤‡∏Ñ‡∏≤: ${user.Product_Cost}`);
            card.setImage(`https://8c44-1-46-158-203.ngrok.io/${user.Product_Picture}`);
            card.setText(`${user.Product_Detail}`);
            card.setButton({text: `‡∏™‡∏±‡πà‡∏á`+user.Product_Name, url:`${user.Product_Name}`});
            agent.add(card);
          }
        }); agent.add("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£‡∏ä‡∏á‡∏î‡∏∑‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞")
        connection.end();
      });
    });
    }

    async function demo(agent){ 
      const user_email = agent.parameters.Product;
    return connectToDatabase()
    .then(connection => {
      return queryDatabase(connection)
      .then(result => {
        //console.log(result);
        result.map(user => {
          const payload = {
            key: 'value',
            key2: 2
          };
          
          agent.add(
            new WebhookClient(agent.UNSPECIFIED, payload, {rawPayload: true, sendAsMessage: true})
          );
        });        
        connection.end();
      });
    });
    }

    function Order(agent){      
      const {
        producttype1, number1      
      } = agent.parameters;
      countProduct = number1;
      prodName = producttype1
      totalCost = CostCalculate(producttype1, number1);
      currentDate = moment(new Date()).format('YYYY-MM-DD HH:mm:ss');
      /*Order_form('Order_CountProduct: '+number1);
      Order_form('Order_TotalCost: '+CostCalculate(producttype1, number1));
      Order_form('Order_Date: '+moment(new Date()).format('YYYY-MM-DD HH:mm:ss'));*/
      agent.add("‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "+producttype1+" ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô "+number1+ " ‡∏ä‡∏∏‡∏î‡∏ô‡∏∞‡∏Ñ‡∏∞")
      agent.add("‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏á‡∏¥‡∏ô "+totalCost+" ‡∏ö‡∏≤‡∏ó")
      agent.add("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà")
    }
    
    function CostCalculate(producttype, number){
      if (producttype=='‡πÄ‡∏´‡πá‡∏î‡∏´‡∏•‡∏¥‡∏ô‡∏à‡∏∑‡∏≠'){
        return 360*number;
      }
      else if (producttype=='‡∏Å‡∏£‡∏∞‡∏ä‡∏≤‡∏¢‡∏î‡∏≥‡∏ú‡∏™‡∏°‡∏á‡∏≤‡∏î‡∏≥'){
        return 250*number
      }
      else if (producttype=='‡∏ü‡πâ‡∏≤‡∏ó‡∏•‡∏≤‡∏¢‡πÇ‡∏à‡∏£‡∏ú‡∏™‡∏°‡∏Å‡∏£‡∏∞‡∏ä‡∏≤‡∏¢‡∏Ç‡∏≤‡∏ß'){
        return 180*number
      }
      else if (producttype=='‡∏Å‡∏£‡∏∞‡∏ä‡∏≤‡∏¢‡∏Ç‡∏≤‡∏ß‡∏ú‡∏™‡∏°‡∏Ç‡∏¥‡∏á'){
        return 250*number 
      }
      else if (producttype=='‡∏ñ‡∏±‡∏á‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏µ‡∏ó‡∏≠‡∏á'){
        return 350*number
      }
    }

    function CompareProduct(producttype){
      if (producttype=='‡πÄ‡∏´‡πá‡∏î‡∏´‡∏•‡∏¥‡∏ô‡∏à‡∏∑‡∏≠'){
        return 22;
      }
      else if (producttype=='‡∏Å‡∏£‡∏∞‡∏ä‡∏≤‡∏¢‡∏î‡∏≥‡∏ú‡∏™‡∏°‡∏á‡∏≤‡∏î‡∏≥'){
        return 23
      }
      else if (producttype=='‡∏ü‡πâ‡∏≤‡∏ó‡∏•‡∏≤‡∏¢‡πÇ‡∏à‡∏£‡∏ú‡∏™‡∏°‡∏Å‡∏£‡∏∞‡∏ä‡∏≤‡∏¢‡∏Ç‡∏≤‡∏ß'){
        return 24
      }
      else if (producttype=='‡∏Å‡∏£‡∏∞‡∏ä‡∏≤‡∏¢‡∏Ç‡∏≤‡∏ß‡∏ú‡∏™‡∏°‡∏Ç‡∏¥‡∏á'){
        return 25 
      }
      else if (producttype=='‡∏ñ‡∏±‡∏á‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏µ‡∏ó‡∏≠‡∏á'){
        return 26
      }
      else{
        return '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'
      }
    }

    function Order_form(inform){
        form.push(inform);
        return form;
    }
    function Delivery(agent){
      const {
        deliverytype
      } = agent.parameters;
      deliveryType = deliverytype;
      statusDel = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô';
      if(deliverytype == 'Flash Express'){
        agent.add("‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "+prodName+" "+countProduct+" ‡∏ä‡∏∏‡∏î"+ "‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÅ‡∏ö‡∏ö "+deliverytype)
        agent.add("‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏á‡∏¥‡∏ô "+ totalCost +" ‡∏ö‡∏≤‡∏ó")
        agent.add("‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠ '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏´‡∏£‡∏∑‡∏≠ '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠")
      }else if(deliverytype == 'Kerry'){
          agent.add("‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "+prodName+" "+countProduct+" ‡∏ä‡∏∏‡∏î"+ "‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÅ‡∏ö‡∏ö "+deliverytype)
          agent.add("‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏á‡∏¥‡∏ô "+ totalCost +" ‡∏ö‡∏≤‡∏ó")
          agent.add("‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠ '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏´‡∏£‡∏∑‡∏≠ '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠")
      }else if(deliverytype == 'Flash Express (COD)'){
        agent.add("‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "+prodName+" "+countProduct+" ‡∏ä‡∏∏‡∏î"+ "‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÅ‡∏ö‡∏ö "+deliverytype)
        agent.add("‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏á‡∏¥‡∏ô "+ totalCost +" ‡∏ö‡∏≤‡∏ó")
        agent.add("‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠ '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏´‡∏£‡∏∑‡∏≠ '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠")
      }else if(deliverytype == 'Kerry (COD)'){
        agent.add("‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "+prodName+" "+countProduct+" ‡∏ä‡∏∏‡∏î"+ "‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÅ‡∏ö‡∏ö "+deliverytype)
        agent.add("‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏á‡∏¥‡∏ô "+ totalCost +" ‡∏ö‡∏≤‡∏ó")
        agent.add("‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠ '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏´‡∏£‡∏∑‡∏≠ '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠")
      }
    }

    function DeliveryYes(agent){
      if(deliveryType == 'Flash Express'){
        agent.add("‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ ‡∏Å‡∏™‡∏¥‡∏Å‡∏£ xxx x xxxxx x ‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå xxx x xxxxx x ‡∏Å‡∏£‡∏∏‡∏á‡∏®‡∏£‡∏µ xxx x xxx xx x ‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô xxx xxx xxx xxx")
        agent.add("‡πÇ‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏à‡πâ‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞")
      }else if(deliveryType == 'Kerry'){
        agent.add("‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ ‡∏Å‡∏™‡∏¥‡∏Å‡∏£ xxx x xxxxx x ‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå xxx x xxxxx x ‡∏Å‡∏£‡∏∏‡∏á‡∏®‡∏£‡∏µ xxx x xxx xx x ‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô xxx xxx xxx xxx")
        agent.add("‡πÇ‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏à‡πâ‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞")
      }else if(deliveryType == 'Flash Express (COD)'){
        agent.add("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏õ‡πá‡∏ô "+ totalCost +" ‡∏ö‡∏≤‡∏ó‡∏ô‡∏∞‡∏Ñ‡∏∞")
        agent.add("‡∏Ç‡∏≠‡∏ä‡∏∑‡πà‡∏≠ ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏∞")
      }else if(deliveryType == 'Kerry (COD)'){
        agent.add("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏õ‡πá‡∏ô "+ totalCost +" ‡∏ö‡∏≤‡∏ó‡∏ô‡∏∞‡∏Ñ‡∏∞")
        agent.add("‡∏Ç‡∏≠‡∏ä‡∏∑‡πà‡∏≠ ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏∞")
      }
    }

    function Cus_Address(agent){
      const {
        any, phone, name
      } = agent.parameters;
      cusName = name;
      cusTel = phone;
      cusAdd = any;
      tracking = 'None';
      /*Order_form('Order_CusName: '+name);
      Order_form('Order_CusTel: '+phone);
      Order_form('Order_CusAdd: '+any);
      Order_form('Order_Tracking: '+'None');*/
      agent.add("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 1-2 ‡∏ß‡∏±‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏ñ‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡∏°‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏•‡∏Ç‡∏û‡∏±‡∏™‡∏î‡∏∏‡πÉ‡∏ô‡∏ô‡∏µ‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å‡∏Ñ‡πà‡∏∞")
    }

    function Payment(agent){
        const imageUrl = agent.request_.body.originalDetectIntentRequest.payload.data.message.attachments[0].payload.url;
        agent.add("‡∏ñ‡πâ‡∏≤‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏õ‡∏∞‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç' ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏Ñ‡πà‡∏∞")
        console.log(imageUrl);
    }

    function PaymentAddress(agent){
        const {
          address
        } = agent.parameters;
        console.log(address)
        agent.add("‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà "+address+" ‡∏ô‡∏µ‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô' ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡∏°‡πà‡∏û‡∏¥‡∏°‡∏û‡πå '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç'")
    }

    async function WriteOrder(agent){  
      console.log(data);
      var data = {
        Order_CountProduct: countProduct,
        Order_TotalCost: totalCost,
        Order_DeliveryType: deliveryType,        
        Order_Status: statusDel,
        Order_CusName: cusName,
        Order_CusAdd: cusAdd,
        Order_CusTel: cusTel,
        Order_Date: currentDate,        
        Order_Tracking: tracking,
      };
      console.log(data);
      const connection = await connectToDatabase();
      const result_2 = await insertIntoDatabase(connection, data);
      agent.add(`‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`);
      form = [];
      connection.end();
      }
        

    var intentMap = new Map();
    intentMap.set('‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',product)
    intentMap.set('OrderIn', WriteOrder)
    intentMap.set('‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', Order)
    intentMap.set('‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà', Cus_Address)
    intentMap.set('Payment', Payment)
    intentMap.set('Payment - yes - Address', PaymentAddress)
    intentMap.set('DeliveryChoose', Delivery)
    intentMap.set('DeliveryChoose - yes', DeliveryYes)

    /*intentMap.set('test', test1)*/
    agent.handleRequest(intentMap);
});
